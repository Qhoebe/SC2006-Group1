{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Belvedere Song\\\\Documents\\\\NTU\\\\SoftwareEngineering\\\\project\\\\SC2006-Group1\\\\src\\\\client\\\\src\\\\Map.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { Circle } from \"./components/circle\";\nimport { facilityLocator, test } from \"./utils/googlePlaces\";\nimport Markers from \"./Markers\";\nimport { APIProvider, Map, AdvancedMarker, useAdvancedMarkerRef, Pin, InfoWindow, useMap, useMapsLibrary, GoogleMapsContext } from \"@vis.gl/react-google-maps\";\nimport RouteButton from \"./routeButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MapContainer() {\n  _s();\n  const placesLibrary = useMapsLibrary(\"places\");\n\n  //NTU coordinates\n  const [position, setPosition] = useState({\n    lat: 1.3477,\n    lng: 103.6837\n  });\n\n  //Parameter related\n  const [radius, setRadius] = useState(1000);\n  const [selectedFacility, setSelectedFacility] = useState(\"CARPARK\");\n\n  //get data from server and store here\n  const [carparkData, setCarparkData] = useState([]);\n  const [facilityData, setFacilityData] = useState([]);\n\n  //marker related\n  const [destination, setDestination] = useState(null);\n  //const [origin, setOrigin] = useState(\"50 Nanyang Ave, 639798\");\n  const [origin, setOrigin] = useState({\n    lat: 1.3477,\n    lng: 103.6837\n  });\n  const handleButtonClick = newDestination => {\n    setDestination(newDestination);\n  };\n  const resetRadius = () => {\n    setRadius(0);\n  };\n\n  //.....................................\n\n  //useEffect to fetch data either from server or google api\n  useEffect(() => {\n    //if no radius, no need to fetch\n    if (radius === 0) {\n      setFacilityData([]);\n      return;\n    }\n    console.log(origin);\n    const controller = new AbortController();\n    if (selectedFacility.toUpperCase() === \"CARPARK\") {\n      //  setFacilityData([]);\n\n      fetch(\"carpark/\" + origin.lat + \"/\" + origin.lng + \"/\" + radius / 1000).then(response => response.json()).then(data => setFacilityData(data)) /*.then (() => console.log(facilityData))*/.catch(error => console.error(error));\n    } else {\n      // setCarparkData([]);\n      const searchParams = new URLSearchParams({\n        lat: origin.lat,\n        lng: origin.lng,\n        range: radius / 1000,\n        facilityType: selectedFacility\n      });\n      fetch(\"facilities/?\" + searchParams.toString()).then(response => response.json()).then(data => setFacilityData(data.results)) /*.then (() => console.log(JSON.stringify(facilityData,null,2)))*/.catch(error => console.error(error));\n\n      // console.log(JSON.stringify(facilityData,null,2))  \n      return () => {\n        controller.abort();\n        console.log(\"aborted\");\n      };\n    }\n  }, [origin, radius, selectedFacility]);\n\n  //get user current location\n  const getLocation = position => {\n    const latitude = position.coords.latitude;\n    const longitude = position.coords.longitude;\n    setOrigin({\n      lat: latitude,\n      lng: longitude\n    });\n  };\n  function error() {\n    console.log(\"Unable to retrieve your location\");\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: \"fixed\",\n      bottom: 0,\n      height: \"93vh\",\n      width: \"100vw\"\n    },\n    children: /*#__PURE__*/_jsxDEV(APIProvider, {\n      apiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n      children: /*#__PURE__*/_jsxDEV(Map, {\n        defaultZoom: 12,\n        defaultCenter: origin,\n        mapId: process.env.REACT_APP_GOOGLE_MAP_ID,\n        fullscreenControl: false,\n        mapTypeControl: false,\n        streetViewControl: false,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"overlayContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"overlayButton\",\n              onClick: () => setRadius(1000) //change circle range + fetch data\n              ,\n              children: \"1KM\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"overlayButton\",\n              onClick: () => setRadius(3000),\n              children: \"3KM\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"overlayButton\",\n              onClick: () => setRadius(5000),\n              children: \"5KM\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 14\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"overlayButton\",\n              onClick: () => setRadius(7000),\n              children: \"7KM\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 14\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"overlayButton\",\n              onClick: () => setSelectedFacility(\"CARPARK\"),\n              children: \"Carpark\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"overlayButton\",\n              onClick: () => setSelectedFacility(\"CAR WORKSHOP\"),\n              children: \"WorkShop\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"overlayButton\",\n              onClick: () => setSelectedFacility(\"FUEL STATION\"),\n              children: \"Fuel Station\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 14\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"overlayButton\",\n              onClick: () => {\n                navigator.geolocation.getCurrentPosition(getLocation, error);\n              },\n              children: \"GPS\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"overlayButton\",\n              onClick: () => setOrigin({\n                lat: 1.3691,\n                lng: 103.8454\n              }),\n              children: \"AMK \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 1\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Circle, {\n          radius: radius,\n          center: origin,\n          onRadiusChanged: setRadius,\n          strokeColor: '#0c4cb3',\n          strokeOpacity: 1,\n          strokeWeight: 2,\n          fillColor: '#3b82f6',\n          fillOpacity: 0.3,\n          editable: false,\n          draggable: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Markers, {\n          origin: origin,\n          locationData: facilityData,\n          FacilityType: selectedFacility,\n          onClick: handleButtonClick,\n          resetRadius: resetRadius\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Direction, {\n          origin: origin,\n          destination: destination,\n          setDestination: setDestination\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n}\n_s(MapContainer, \"LrEU7JVxfPEc6K3rnazKsqJzU94=\", false, function () {\n  return [useMapsLibrary];\n});\n_c = MapContainer;\nfunction Direction({\n  origin,\n  destination,\n  setDestination\n}) {\n  _s2();\n  var _leg$distance, _leg$duration;\n  const map = useMap();\n  const routesLibrary = useMapsLibrary(\"routes\");\n  const [directionsService, setDirectionsService] = useState();\n  const [directionsRenderer, setDirectionsRenderer] = useState();\n  const [routes, setRoutes] = useState([]);\n  const [routeIndex, setRouteIndex] = useState(0);\n  const selected = routes[routeIndex];\n  const leg = selected === null || selected === void 0 ? void 0 : selected.legs[0];\n  useEffect(() => {\n    if (!routesLibrary || !map) return;\n    setDirectionsService(new routesLibrary.DirectionsService());\n    setDirectionsRenderer(new routesLibrary.DirectionsRenderer({\n      map\n    }));\n  }, [routesLibrary, map]);\n  useEffect(() => {\n    if (!directionsService || !directionsRenderer) return;\n    map.panTo(origin);\n    if (origin && destination) {\n      directionsService.route({\n        origin: origin,\n        destination: destination,\n        travelMode: window.google.maps.TravelMode.DRIVING,\n        provideRouteAlternatives: true\n      }).then(response => {\n        directionsRenderer.setDirections(response);\n        setRoutes(response.routes);\n      });\n    } else {\n      directionsRenderer.setDirections({\n        routes: []\n      });\n      setRoutes([]);\n    }\n  }, [directionsService, directionsRenderer, origin, destination]);\n\n  //change route when click on alt route\n  useEffect(() => {\n    if (!directionsRenderer) return;\n    directionsRenderer.setRouteIndex(routeIndex);\n  }, [routeIndex, directionsRenderer]);\n  if (!leg) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"directions\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: selected.summary\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [leg.start_address.split(',')[0], \" to \", leg.end_address.split(',')[0]]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Distance: \", (_leg$distance = leg.distance) === null || _leg$distance === void 0 ? void 0 : _leg$distance.text]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Duration: \", (_leg$duration = leg.duration) === null || _leg$duration === void 0 ? void 0 : _leg$duration.text]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Other Routes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: routes.map((route, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setRouteIndex(index)\n          //diffrent styling for currently selected route\n          ,\n          className: index === routeIndex ? \"buttonSelected\" : \"button\",\n          children: route.summary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 17\n        }, this)\n      }, route.summary, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(RouteButton, {\n      origin: origin,\n      destination: destination\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        position: 'absolute',\n        bottom: '10px',\n        right: '5px',\n        maxHeight: '20px',\n        borderRadius: '5px'\n      },\n      onClick: () => setDestination(null),\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 252,\n    columnNumber: 9\n  }, this);\n}\n_s2(Direction, \"tN9xR8n20dAjhQgDzlfll9ur9dE=\", false, function () {\n  return [useMap, useMapsLibrary];\n});\n_c2 = Direction;\nvar _c, _c2;\n$RefreshReg$(_c, \"MapContainer\");\n$RefreshReg$(_c2, \"Direction\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","_s2","useState","useEffect","Circle","facilityLocator","test","Markers","APIProvider","Map","AdvancedMarker","useAdvancedMarkerRef","Pin","InfoWindow","useMap","useMapsLibrary","GoogleMapsContext","RouteButton","jsxDEV","_jsxDEV","MapContainer","placesLibrary","position","setPosition","lat","lng","radius","setRadius","selectedFacility","setSelectedFacility","carparkData","setCarparkData","facilityData","setFacilityData","destination","setDestination","origin","setOrigin","handleButtonClick","newDestination","resetRadius","console","log","controller","AbortController","toUpperCase","fetch","then","response","json","data","catch","error","searchParams","URLSearchParams","range","facilityType","toString","results","abort","getLocation","latitude","coords","longitude","style","bottom","height","width","children","apiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","defaultZoom","defaultCenter","mapId","REACT_APP_GOOGLE_MAP_ID","fullscreenControl","mapTypeControl","streetViewControl","className","onClick","fileName","lineNumber","columnNumber","navigator","geolocation","getCurrentPosition","center","onRadiusChanged","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","editable","draggable","locationData","FacilityType","Direction","_c","_leg$distance","_leg$duration","map","routesLibrary","directionsService","setDirectionsService","directionsRenderer","setDirectionsRenderer","routes","setRoutes","routeIndex","setRouteIndex","selected","leg","legs","DirectionsService","DirectionsRenderer","panTo","route","travelMode","window","google","maps","TravelMode","DRIVING","provideRouteAlternatives","setDirections","summary","start_address","split","end_address","distance","text","duration","index","right","maxHeight","borderRadius","_c2","$RefreshReg$"],"sources":["C:/Users/Belvedere Song/Documents/NTU/SoftwareEngineering/project/SC2006-Group1/src/client/src/Map.js"],"sourcesContent":["\"use client\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Circle } from \"./components/circle\";\r\nimport { facilityLocator,test } from \"./utils/googlePlaces\";\r\nimport Markers from \"./Markers\";\r\nimport{\r\n    APIProvider,\r\n    Map,\r\n    AdvancedMarker,\r\n    useAdvancedMarkerRef,\r\n    Pin,\r\n    InfoWindow,\r\n    useMap,\r\n    useMapsLibrary,\r\n    GoogleMapsContext,\r\n} from \"@vis.gl/react-google-maps\"\r\n\r\nimport RouteButton from \"./routeButton\";\r\n\r\nexport default function MapContainer(){\r\n  const placesLibrary = useMapsLibrary(\"places\");\r\n\r\n    //NTU coordinates\r\nconst [position, setPosition] = useState({lat:1.3477 , lng:103.6837});\r\n\r\n//Parameter related\r\nconst [radius, setRadius] = useState(1000);\r\nconst [selectedFacility, setSelectedFacility] = useState(\"CARPARK\");\r\n\r\n//get data from server and store here\r\nconst [carparkData, setCarparkData] = useState([]);\r\nconst [facilityData, setFacilityData] = useState([]);\r\n\r\n//marker related\r\nconst [destination, setDestination] = useState(null);\r\n//const [origin, setOrigin] = useState(\"50 Nanyang Ave, 639798\");\r\nconst [origin, setOrigin] = useState({lat:1.3477 , lng:103.6837});\r\nconst handleButtonClick = (newDestination) => {\r\n  setDestination(newDestination);\r\n  \r\n};\r\nconst resetRadius = () => {\r\n  setRadius(0);\r\n};\r\n\r\n//.....................................\r\n\r\n//useEffect to fetch data either from server or google api\r\nuseEffect(() => {\r\n\r\n  \r\n  //if no radius, no need to fetch\r\n  if(radius===0){\r\n      setFacilityData([]);\r\n      return;}\r\n  console.log(origin);\r\n\r\n\r\nconst controller= new AbortController();\r\nif(selectedFacility.toUpperCase()===\"CARPARK\"){\r\n//  setFacilityData([]);\r\n        \r\n        fetch(\"carpark/\" + origin.lat + \"/\" + origin.lng + \"/\" + radius/1000)\r\n        .then((response) => response.json())\r\n        .then((data) => setFacilityData(data))/*.then (() => console.log(facilityData))*/\r\n        .catch((error) => console.error(error));\r\n    }\r\n    else {\r\n     // setCarparkData([]);\r\n      const searchParams = new URLSearchParams({\r\n        lat: origin.lat,\r\n        lng: origin.lng,\r\n        range: radius/1000,\r\n        facilityType: selectedFacility,\r\n      });\r\n      \r\n        fetch(\"facilities/?\" + searchParams.toString() )\r\n        .then((response) => response.json())\r\n        .then((data) => setFacilityData(data.results))/*.then (() => console.log(JSON.stringify(facilityData,null,2)))*/\r\n        .catch((error) => console.error(error));\r\n\r\n        // console.log(JSON.stringify(facilityData,null,2))  \r\n        return () => {controller.abort(); console.log(\"aborted\");}\r\n    }\r\n\r\n\r\n   \r\n}, [origin,radius,selectedFacility]);\r\n\r\n\r\n//get user current location\r\nconst getLocation = (position) => {\r\n\r\n  const latitude = position.coords.latitude;\r\n  const longitude = position.coords.longitude;\r\n\r\n  setOrigin({lat:latitude,lng:longitude})\r\n}\r\nfunction error() {\r\n  console.log(\"Unable to retrieve your location\");\r\n}\r\n\r\nreturn (\r\n    <div style={{position: \"fixed\", bottom: 0, height: \"93vh\", width: \"100vw\" }} >\r\n    <APIProvider apiKey={process.env.REACT_APP_GOOGLE_MAPS_API_KEY}>\r\n        <Map defaultZoom={12} \r\n        defaultCenter={origin} \r\n        mapId={process.env.REACT_APP_GOOGLE_MAP_ID}\r\n        fullscreenControl={false}\r\n        mapTypeControl= {false}\r\n        streetViewControl={false}\r\n        >\r\n         \r\n            <div className=\"overlayContainer\">\r\n              <div>\r\n            <button className=\"overlayButton\"\r\n            onClick={() => setRadius(1000)}//change circle range + fetch data\r\n            >1KM</button>\r\n            <button className=\"overlayButton\"\r\n            onClick={() => setRadius(3000)}\r\n            >3KM</button>\r\n             <button className=\"overlayButton\"\r\n            onClick={() => setRadius(5000)}\r\n            >5KM</button>\r\n             <button className=\"overlayButton\"\r\n            onClick={() => setRadius(7000)}\r\n            >7KM</button>\r\n            </div>\r\n\r\n            <div>\r\n            <button className=\"overlayButton\"\r\n            onClick={() => setSelectedFacility(\"CARPARK\")}\r\n            >Carpark</button>\r\n            <button className=\"overlayButton\"\r\n            onClick={() => setSelectedFacility(\"CAR WORKSHOP\")}\r\n            >WorkShop</button>\r\n             <button className=\"overlayButton\"\r\n            onClick={() => setSelectedFacility(\"FUEL STATION\")}\r\n            >Fuel Station</button>\r\n            </div>\r\n\r\n            <div >\r\n            <button className=\"overlayButton\"\r\n            onClick={() => {\r\n            navigator.geolocation.getCurrentPosition(getLocation,error)}}\r\n            >GPS</button>\r\n\r\n<button className=\"overlayButton\"\r\n            onClick={() => setOrigin({lat:1.3691,lng:103.8454})}\r\n            >AMK </button>\r\n            </div>\r\n\r\n            </div>\r\n\r\n            <Circle\r\n          radius={radius}\r\n          center={origin}\r\n          onRadiusChanged={setRadius}\r\n          \r\n          strokeColor={'#0c4cb3'}\r\n          strokeOpacity={1}\r\n          strokeWeight={2}\r\n          fillColor={'#3b82f6'}\r\n          fillOpacity={0.3}\r\n          editable ={false}\r\n          draggable ={false}\r\n          \r\n        />\r\n      \r\n      \r\n\r\n\r\n        {/* <Markers locationData={carparkData} onClick={handleButtonClick}></Markers> */}\r\n        <Markers origin={origin} locationData={facilityData} FacilityType={selectedFacility} onClick={handleButtonClick} resetRadius={resetRadius}></Markers>\r\n        {/* <div>\r\n        {carparkData.map((point) => (\r\n\r\n        <AdvancedMarker position={point.Location}\r\n        title={point.Development}\r\n        key={point.CarParkID}\r\n        onClick={() => selectCarpark(point.CarParkID)}\r\n        >\r\n            <Pin  ></Pin>\r\n            {(point.CarParkID===selectedCarParkID)&&(\r\n          <InfoWindow position={point.Location} onCloseClick={closeInfoWindow}>\r\n           <h3>{point.Development}</h3>\r\n           <p>Available Lots: {point.AvailableLots}</p>\r\n           <button onClick={() => console.log(\"PRESSED\")}>Close</button>\r\n          </InfoWindow>\r\n        )}\r\n        </AdvancedMarker>\r\n        ))}\r\n        \r\n\r\n        </div> */} \r\n        <Direction origin={origin} destination={destination} setDestination={setDestination} />\r\n            {/* <Direction/> */}\r\n        </Map>\r\n    </APIProvider>\r\n    </div>\r\n    );\r\n}\r\n\r\nfunction Direction({ origin, destination, setDestination }) {\r\n    const map=useMap();\r\n    const routesLibrary = useMapsLibrary(\"routes\");\r\n    const [directionsService, setDirectionsService] = useState();\r\n    const [directionsRenderer, setDirectionsRenderer] = useState();\r\n    const [routes, setRoutes] = useState([]);\r\n    const [routeIndex, setRouteIndex] = useState(0);\r\n    const selected = routes[routeIndex];\r\n    const leg=selected?.legs[0];\r\n    \r\n\r\n     useEffect(() => {\r\n    if (!routesLibrary || !map) return;\r\n    setDirectionsService(new routesLibrary.DirectionsService());\r\n    setDirectionsRenderer(new routesLibrary.DirectionsRenderer({map}));\r\n  }, [routesLibrary, map]);\r\n\r\n    useEffect(()=>{\r\n        if(!directionsService || !directionsRenderer) return;\r\n      map.panTo(origin);\r\n        if(origin && destination){\r\n        directionsService.route({ \r\n            origin: origin,\r\n            destination: destination,\r\n            travelMode: window.google.maps.TravelMode.DRIVING,\r\n            provideRouteAlternatives: true,})\r\n            .then((response)=>{\r\n            directionsRenderer.setDirections(response);\r\n            setRoutes(response.routes);\r\n        }) ;\r\n      }else\r\n      {\r\n        directionsRenderer.setDirections({ routes: [] });\r\n      setRoutes([]);\r\n      }\r\n  \r\n    }, [directionsService, directionsRenderer,origin, destination]);\r\n\r\n    //change route when click on alt route\r\n    useEffect(()=>{\r\n        if(!directionsRenderer) return;\r\n        directionsRenderer.setRouteIndex(routeIndex);\r\n    },[routeIndex,directionsRenderer])\r\n\r\n    if(!leg) return null;\r\n\r\n\r\n    return (\r\n        <div className=\"directions\">\r\n          \r\n          <h2>{selected.summary}</h2>\r\n          <p>\r\n            {leg.start_address.split(',')[0]} to {leg.end_address.split(',')[0]}\r\n          </p>\r\n          <p>Distance: {leg.distance?.text}</p>\r\n          <p>Duration: {leg.duration?.text}</p>\r\n    \r\n          <h2>Other Routes</h2>\r\n          <ul>\r\n            {routes.map((route, index) => (\r\n              <li key={route.summary}>\r\n                <button onClick={() => setRouteIndex(index)}\r\n                //diffrent styling for currently selected route\r\n                className={index === routeIndex ? \"buttonSelected\" : \"button\"}\r\n                >\r\n                  {route.summary}\r\n                </button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <RouteButton origin={origin} destination={destination} />\r\n\r\n            <br></br>\r\n            <button style={{ position: 'absolute', bottom: '10px', right: '5px',maxHeight: '20px',borderRadius: '5px' }\r\n            } onClick={() => setDestination(null)}>Cancel</button>\r\n        </div>\r\n      );\r\n}\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}